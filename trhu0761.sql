CREATE TABLE RHU.RADICACION_DOCUMENTOS (
    RADO_CODIGO              NUMBER PRIMARY KEY,
    INC_RADICACION           NUMBER NOT NULL,
    TPD_CODIGO               NUMBER NOT NULL,
    DEA_CODIGO               NUMBER,
    RADO_REQUERIDO           VARCHAR2(2),
    RADO_ESTADO              VARCHAR2(15) DEFAULT ('SIN_VALIDAR'),
    RADO_OBSERVACIONES       VARCHAR2(1000),
    AUD_USUARIO              VARCHAR2(15) NOT NULL,
    AUD_FECHA                DATE NOT NULL
)

ALTER TABLE RHU.RADICACION_DOCUMENTOS ADD CONSTRAINT  RADO_REQUERIDO CHECK (RADO_REQUERIDO IN ('S' , 'N'));
ALTER TABLE RHU.RADICACION_DOCUMENTOS ADD CONSTRAINT  RADO_ESTADO CHECK (RADO_ESTADO IN ('APROBADO' , 'RECHAZADO', 'SIN_VALIDAR'));

ALTER TABLE RHU.RADICACION_DOCUMENTOS ADD  CONSTRAINT FK_RADOTIPODOCUMENTO FOREIGN KEY (TPD_CODIGO) REFERENCES ADM.TIPO_DOCUMENTO(TPD_CODIGO);
ALTER TABLE RHU.RADICACION_DOCUMENTOS ADD  CONSTRAINT FK_RADOINCAPACIDAD FOREIGN KEY (INC_RADICACION) REFERENCES RHU.INCAPACIDAD(INC_RADICACION);
GRANT SELECT ON RHU.RADICACION_DOCUMENTOS TO PUBLIC;
CREATE PUBLIC SYNONYM RADICACION_DOCUMENTOS FOR RHU.RADICACION_DOCUMENTOS;
GRANT ALL ON RHU.RADICACION_DOCUMENTOS TO PUBLIC;
CREATE SEQUENCE RHU.SEQ_RADICACION_DOCUMENTOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE;
GRANT ALL ON RHU.SEQ_RADICACION_DOCUMENTOS TO PUBLIC;

CREATE OR REPLACE TRIGGER "RHU"."DB_RADICACION_DOCUMENTOS" 
Before
  INSERT ON  RHU.RADICACION_DOCUMENTOS REFERENCING NEW AS NEW
  FOR EACH ROW

  Begin
	Select SEQ_RADICACION_DOCUMENTOS.Nextval
      INTO :NEW.RADO_CODIGO
      FROM dual;	
  --
EXCEPTION
  WHEN OTHERS THEN
    raise_application_error(-20001, 'Error secuencia DB_RADICACION_DOCUMENTOS'||sqlerrm);
End;
